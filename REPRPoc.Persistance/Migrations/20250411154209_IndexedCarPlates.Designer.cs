// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using REPRPoc.Persistance;

#nullable disable

namespace REPRPoc.Persistance.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250411154209_IndexedCarPlates")]
    partial class IndexedCarPlates
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("REPRPoc.Entities.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("Created")
                        .IsConcurrencyToken()
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("LastModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Plate")
                        .IsUnique();

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9b22bae-3afd-43e5-b739-174f74523055"),
                            Color = "Red",
                            Created = new DateTime(2025, 4, 10, 18, 27, 37, 0, DateTimeKind.Utc),
                            LastModifiedBy = new Guid("71f94b6f-696c-4d10-9494-7185b7dba713"),
                            Maker = "Toyota",
                            Model = "Corolla",
                            Plate = "ABC-1234"
                        },
                        new
                        {
                            Id = new Guid("8bd7635e-d72a-4d63-b209-be88c72448e7"),
                            Color = "Blue",
                            Created = new DateTime(2025, 4, 10, 18, 27, 37, 0, DateTimeKind.Utc),
                            LastModifiedBy = new Guid("71f94b6f-696c-4d10-9494-7185b7dba713"),
                            Maker = "Honda",
                            Model = "Civic",
                            Plate = "XYZ-5678"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
